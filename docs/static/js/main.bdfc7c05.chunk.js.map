{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","id","onChange","target","value","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","downsized_large","console","log","GifGridItem","href","rel","class","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","className","ExpertGifApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"uKAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,GAAG,WAEHC,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOC,QAmBfA,MAAOZ,O,+BC3BVa,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAIDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHf,GAAIe,EAAIf,GACRgB,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,gBAAgBX,QAIzCY,QAAQC,IAAIP,GAhBO,kBAkBZA,GAlBY,4CAAH,sDCGPQ,G,KAAc,SAAC,GAAqB,EAApBrB,GAAqB,IAAjBgB,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAEpC,OAKI,aAJA,CAIA,qBAEA,gCACI,mBAAGe,KAAMf,EAAKL,OAAO,SAASqB,IAAI,aAAlC,SACA,qBAAKC,MAAM,wBAAwBC,IAAKlB,EAAKmB,IAAKV,MAElD,4BAAIA,WCVHW,EAAU,SAAC,GAAgB,IAAftB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACZf,mBAAS,CAC/BsB,KAAM,GACNgB,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAwBtC,OAlBAC,qBAAU,WACN3B,EAAQC,GACP2B,MAAK,SAAAC,GAEFC,YAAW,WACPJ,EAAS,CACLlB,KAAMqB,EACNL,SAAS,MAEd,UAOT,CAACvB,IAEIwB,EDpBwBM,CAAa9B,GAAhCY,EAFuB,EAE5BL,KAAagB,EAFe,EAEfA,QAEpB,OACI,qCACI,6BAAKvB,IAEJuB,GAAW,mBAAGQ,UAAU,2CAAb,wBAEZ,qBAAKZ,MAAM,iBAAX,SACKP,EAAOH,KAAI,SAACC,GACT,OAAQ,cAAC,EAAD,eAA8BA,GAAZA,EAAIf,aEWnCqC,EAzBM,WAAO,IAAD,EAEa/C,mBAAS,IAFtB,mBAEhBgD,EAFgB,KAEJjD,EAFI,KAUvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACKiD,EAAWxB,KAAI,SAACyB,GACb,OAAO,cAAC,EAAD,CAAmBlC,SAAUkC,GAAfA,YChBzCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.bdfc7c05.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 0){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                id=\"Category\"\r\n                // onChange={(e) => console.log(e)}\r\n                onChange={handleInputChange}\r\n                value={inputValue}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=iTpLiIS4oO21HX37tl4LbzbHklgUBJ7i`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    \r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_large.url\r\n        }\r\n    });\r\n\r\n    console.log(gifs);\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\nimport '../index.css';\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    \r\n    return (\r\n        // <div className=\"card animate__animated animate__flip\">\r\n        //     <img src={url} alt={title}/>\r\n        //     <p>{title}</p>\r\n        // </div>\r\n        <>\r\n        {/* <h1>The Purest of Doggos</h1> */}\r\n        <div>\r\n            <a href={url} target=\"_blank\" rel=\"noreferrer\">\r\n            <img class='grid-item grid-item-1' src={url} alt={title} />\r\n            </a>\r\n            <p>{title}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport '../index.css';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p className=\"p_size animate__animated animate__bounce\">Loading...</p>}\r\n\r\n            <div class=\"grid-container\">\r\n                {images.map((img)=> {\r\n                    return (<GifGridItem key={img.id} {...img}/>);\r\n                })}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then(imgs => {\r\n\r\n            setTimeout(()=> {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            }, 1000);\r\n\r\n            // setState({\r\n            //     data: imgs,\r\n            //     loading: false\r\n            // });\r\n        });\r\n    },[category]);\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst ExpertGifApp = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    // const handleAdd = () => {\r\n    //     const categorie = 'Bob Esponja';\r\n        // setCategories([...categories, serie]);\r\n    //     setCategories(categories => [...categories, categorie])\r\n    // }\r\n\r\n    return(\r\n        <>\r\n            <h2>ExpertGifApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {categories.map((cat)=> {\r\n                    return(<GifGrid key={cat} category={cat}/>);\r\n                })}\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ExpertGifApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ExpertGifApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <ExpertGifApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}